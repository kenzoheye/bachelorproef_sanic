steps:

# LINTER (CHECK) if not good linted error
#
#
# ignore:
# - line breaks before binary operator
# - line too long (long urls)
- name: 'eu.gcr.io/sapient-tracer-168309/code-scanners/python/flake8'
  args:
  - 'flake8'
  - '-j4'
  - '--ignore'
  - 'W503,E501'
  - 'app/'

# LINTER (CHECK) if not good linted error
- name: 'eu.gcr.io/sapient-tracer-168309/code-scanners/python/isort'
  args:
  - 'isort'
  - '-c'
  - 'app/*'

# STATIC CODE CHECKER
- name: 'eu.gcr.io/sapient-tracer-168309/code-scanners/python/bandit'
  args:
  - 'bandit'
  - '-lll'
  - '-r'
  - 'app'

# DEPENDENCY ANALYZER
- name: 'eu.gcr.io/sapient-tracer-168309/code-scanners/python/safety'
  args:
  - 'safety'
  - 'check'
  - '-r'
  - 'app/requirements.txt'

# # UNIT TESTING
# - name: 'eu.gcr.io/sapient-tracer-168309/code-scanners/python/pytest'
#   args:
#   - 'python'
#   - '-m'
#   - 'pytest'
#   - 'app/'

# get the tag it should use for next tagging and building the image with tag == tag
# this will be used on tags X.X.X.X where we have MAJOR.MINOR.PATCH.BUILD
# where BUILD => SEMVER = 3 # QA
# where PATCH => SEMVER = 2 # STAGE
# where MINOR => SEMVER = 1 #
# where MAJOR => SEMVER = 0 # THIS SHOULD NEVER BE USED IN AUTO BUILDING
- name: eu.gcr.io/sapient-tracer-168309/wg-base-images/wg-docker-autotagger
  entrypoint: 'bash'
  args:
    - '-c'
    - 'python /autotagger.py $$BITBUCKET_USERNAME $$BITBUCKET_SECRET ${_POD} ${COMMIT_SHA} ${_SEMVER} > /root/tag/tag'
  secretEnv: ['BITBUCKET_SECRET', 'BITBUCKET_USERNAME']
  volumes:
  - name: 'tag'
    path: /root/tag

# BUILD DOCKER
- name: 'gcr.io/cloud-builders/docker'
  entrypoint: 'bash'
  args:
    - '-c'
    - 'docker build -t eu.gcr.io/$PROJECT_ID/${_NAMESPACE}/${_POD}:$(cat /root/tag/tag) -t eu.gcr.io/$PROJECT_ID/${_NAMESPACE}/${_POD}:latest --cache-from eu.gcr.io/$PROJECT_ID/${_NAMESPACE}/${_POD}:latest .'
  volumes:
  - name: 'tag'
    path: /root/tag

# PUSH DOCKER
- name: 'gcr.io/cloud-builders/docker'
  args:
  - 'push'
  - 'eu.gcr.io/$PROJECT_ID/${_NAMESPACE}/${_POD}'

# PUSH K8S CHANGE IMAGE
# - name: eu.gcr.io/sapient-tracer-168309/wg-base-images/wg-docker-kubectl
- name: 'gcr.io/cloud-builders/kubectl'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      cat << EOF > /tmp/kubeconfig
      apiVersion: v1
      clusters:
      - cluster:
          certificate-authority-data: $$KUBERNETES_CA
          server: $$KUBERNETES_SERVER
        name: cluster
      contexts:
      - context:
          cluster: cluster
          user: user
        name: cluster
      current-context: cluster
      kind: Config
      preferences: {}
      users:
      - name: user
        user:
          token: ''
      EOF
      kubectl --kubeconfig /tmp/kubeconfig --token=$$KUBERNETES_TOKEN -n ${_NAMESPACE} set image deployment/${_POD} ${_POD}=eu.gcr.io/$PROJECT_ID/${_NAMESPACE}/${_POD}:$(cat /root/tag/tag)
  secretEnv: ['KUBERNETES_TOKEN', 'KUBERNETES_CA', 'KUBERNETES_SERVER']
  volumes:
  - name: 'tag'
    path: /root/tag

substitutions:
    _SEMVER: "3"
    _NAMESPACE: phoenix-qa
    _POD: wg-be-phoenix-auz

# here we will store the bitbucket user , password (app password) and kubernetes service token of wegroupwolfbot
secrets:
- kmsKeyName: projects/sapient-tracer-168309/locations/global/keyRings/bitbucket/cryptoKeys/bitbucket-key
  secretEnv:
    BITBUCKET_SECRET: "CiQAPWKAKplZiOEUiN3a+L2w5JvdVSvZfjOu2lDrbXjfX7nUs3ESPQAQKPOk4ImxoFZ0gvvz7DKUCA38gJZWBeTh0WARsoQoHj89v/87FNd3p0yf80rSo0PrCvzQQnmeiw3QOJk="
    BITBUCKET_USERNAME: "CiQAPWKAKpBW16+53sNrtwDcpJR2IOaZVVSbavnXpXGybTrU2zESNwAQKPOk68w10qkDOsPjDseSMK4jRERZA55oR0ilDquyIfbHzUTx5LNRBWgJiT2z7GNuVZSsAP8="
    KUBERNETES_TOKEN: "CiQAPWKAKjWn36Xw+aNELp4T+KyzhOpmK7DgOxAMAXZJkp4NvCwSkAcAECjzpC9LOO1wdaGve0lncTAXDLwXDpfh6Dd5JeMqqyUdUsSLd2I07E94JhWoLnQPHExBWqq8Gsrf/wa6XutnLthc6yQTkxqIt7WvJcJ+h42kGsc1EkP0DQd7YOA8yh12POSon7VEc611jYQq6krU7j6A0IAdueR6oqQbnNUxE0Qfvw+QxQNpcfwThAc37O4UXIcqBn/qyFKwafNU9xGmYulVQeAdEXurd36chqh2/+T6E9TePVr6Q4JJSf2ChYcRmO9SL6y8MfggRys7S5hoi82G3wm+tbc7Lss0CrR6k3ssojeqO4dIQ/uElZzAPzO+BNjTlkv/qPqu4zlJWsoIAeewbZLltTMNgI9gfwDgXZYat3ufNc4KFF37Y96+tdJKTByf4UTdm9QmePvekg3TaMOwZpFhPgsqSOdRVz1yKcNaUSoYjtQ9pg5ZUmOltkyd0y3AF36u1gfua7Px1Mym9ZxDyuYxQy43UyG3+96MER2pjQPlYrzQrp3Qx2tCEbX+exGdKV5bmTBkJlwNPj76z7yJZqgOKRgS+W5HCdzIcvxgp3IPfOyWjVC9F88bzQUD9D9IH6Rn+0mkRSSFySAuY0lsIXaZGTCLFjVkGwB9OaepQmaU/8ukeDGeHkeL3A0dtALRlS5hmhE9oH4DmZBqdJx0Na3rHWQuZnCeXoP8d1h39G5Jlr1A9EMn6xxBQ7eiTT8AaGo0rexs/q+1TBvM9CcCuPFmPVW0ODTQKkQzEsjGSD3zob3ZrGYhQVeKayFu+ureTinGotgUk4nfEFujkjYbEOfNK/4T/hmUhj2T7/9mTxnTRZVMmm0tBG3Qoy/psUUQlu/3BFYMesag6dsM2SzUUHKsM074NaiUfh7J+UEYcGLGdKsFZjiQuvfPcm5Da5PRsnegYoDRb/fjENQmVqJOb+b9/5kc9k0swoe82ssKsdaXk6qb4JfO11KNCuJdLR7VBux/qbi3bUIskcuCjUDFvYUHs8K/lWyRIAIG0Ps3DPuyKDn+91m9EMC9TWR1lgXcPIhQRRG0XM4IjL7SrTSmXKHupcfHp28csScjkTVOccuxuEbsCUfjtaz8W9Ro4RIPOLmWatiPTAPXSDvRZRvCJ+Wq6fwpSNaW52ZY862LuUn5TvtYZ+dobt5V/KvrAU4ZgO1Bxj8M1bcV/f2jyy6LfaaQ8YoUqeAZQ098jNsKiFtVp4ngdw9BqFReB18="
    KUBERNETES_CA: "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"
    KUBERNETES_SERVER: "CiQAPWKAKmppC9YBz/39cA+770Sju2tc6vx6X1WiTr1uT0ppIiUSPQAQKPOkUJ1uxNgzreHmkVYTVrnkTui8eRPmTxXoPx4mogdg3egep11Cj/XFBu6miFauqV9n2lbuGybOC4Y="
